#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main(void)
{
	pid_t pid;
	int rv1;
	int rv2;	int x;

	pid = fork();

	printf("PARENT: My child's PID is %d\n", pid);
	
	for(x=0;x<2;x++)
	{
		pid = fork();
		if(pid<0)
		{
			perror("fork");
			exit(1);
		}
		else if(pid>0)
		{
			printf(" CHILD: This is the child no %d process!\n", x+1);
			printf(" CHILD: My PID is %d\n", getpid());
			printf(" CHILD: My parent's PID is %d\n", getppid());
			printf(" CHILD: Enter my exit status (make it small): ");
			scanf(" %d", &rv1);
			printf(" CHILD: I'm outta here!\n");
		}
		else
		{
			printf("PARENT: This is the parent process!\n");
			printf("PARENT: My PID is %d\n", getpid());
			printf("PARENT: My child's PID is %d\n", pid);
			printf("PARENT: I'm now waiting for my both child to exit()...\n");
			wait(&rv1);
			wait(&rv2);
			printf("PARENT: My First child's exit status is: %d\n", WEXITSTATUS(rv1));
			printf("PARENT: My Second child's exit status is: %d\n", WEXITSTATUS(rv1));
			printf("PARENT: I'm outta here!\n");
		}
	}
}
